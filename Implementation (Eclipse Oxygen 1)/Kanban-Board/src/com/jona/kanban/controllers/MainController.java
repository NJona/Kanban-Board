package com.jona.kanban.controllers;



import javafx.event.ActionEvent;
import javafx.event.EventHandler;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import com.jona.kanban.services.ColumnService;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.geometry.HPos;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.layout.ColumnConstraints;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Text;

/**
 * generated by APX file generation template
 * File name: MainController.java
 */
public class MainController implements Initializable {
	@FXML private GridPane boardGridpane;
	@FXML private GridPane[] columnsGridpane;
	@FXML private ColumnConstraints[] columns;
	@FXML private Text[] columnNameTextLabel;
	@FXML private TextField[] columnNameTextField;
	@FXML private Button[] columnEditNameButton;
	@FXML private Button toggleLastColumnIsVisible;
	
	private boolean lastColumnIsVisible;
	private int columnLength;
	
	private ColumnService columnService;
	
	public MainController() throws FileNotFoundException {
		lastColumnIsVisible = false;
		columnService = new ColumnService();
		columnService.loadColumns();
		columnLength = columnService.getColumnNamesLength();
	}
	
    @Override
    public void initialize(URL url, ResourceBundle rb) {
    	
    	columnsGridpane = new GridPane[columnLength];
    	columns = new ColumnConstraints[columnLength];
    	columnNameTextLabel = new Text[columnLength];
    	columnNameTextField = new TextField[columnLength];
    	columnEditNameButton = new Button[columnLength];
    	
    	for(int columnIndex = 0; columnIndex<columnLength;columnIndex++) {    		
    		columns[columnIndex] = new ColumnConstraints();
    		columns[columnIndex].setPercentWidth((int)(100 / columnLength));
    		columns[columnIndex].setHalignment(HPos.CENTER);
    		
    		boardGridpane.getColumnConstraints().add(columns[columnIndex]);
    		
    		columnsGridpane[columnIndex] = new GridPane();    		
    		
    		if(columnIndex%2==0) {
    			columnsGridpane[columnIndex].setStyle("-fx-background-color: white;");
    		}else {
    			columnsGridpane[columnIndex].setStyle("-fx-background-color: grey;");
    		}
    		
    		columnsGridpane[columnIndex].setVisible(columnService.getColumnIsActive(columnIndex));
    		
    		ColumnConstraints columnText = new ColumnConstraints();
    		columnText.setPercentWidth(90);
    		ColumnConstraints columnEditTextButton = new ColumnConstraints();
    		columnEditTextButton.setPercentWidth(10);
    		
    		columnsGridpane[columnIndex].getColumnConstraints().addAll(columnText, columnEditTextButton);
    		
    		columnNameTextLabel[columnIndex] = new Text(columnService.getColumnName(columnIndex));
    		columnNameTextField[columnIndex] = new TextField(columnService.getColumnName(columnIndex));
    		columnNameTextField[columnIndex].setVisible(false);
    		columnEditNameButton[columnIndex] = new Button("Edit");
    		columnEditNameButton[columnIndex].setUserData(columnIndex);
    		columnEditNameButton[columnIndex].setOnAction(new EventHandler<ActionEvent>() {
        	    @Override public void handle(ActionEvent e) {
        	        try {
						handleEditColumnNameButtonPressed(e);
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
        	    }
        	});
    		columnsGridpane[columnIndex].add(columnNameTextLabel[columnIndex], 0, 0);
    		columnsGridpane[columnIndex].add(columnNameTextField[columnIndex], 0, 0);
    		columnsGridpane[columnIndex].add(columnEditNameButton[columnIndex], 1, 0);
    		
    		((GridPane) boardGridpane).add(columnsGridpane[columnIndex], columnIndex, 1);
    	}
    
    	if(columnService.getColumnIsActive(columnLength-1)) {
    		toggleLastColumnIsVisible = new Button("Delete Column");
    	}else {
    		toggleLastColumnIsVisible = new Button("Add Column");
    	}
    	toggleLastColumnIsVisible.setOnAction(new EventHandler<ActionEvent>() {
    	    @Override public void handle(ActionEvent e) {
    	        try {
					handleToggleLastColumnButtonPressed(e);
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
    	    }
    	});
    	((GridPane) boardGridpane).add(toggleLastColumnIsVisible, columnLength-1, 0);
    }  
    
    @FXML protected void handleToggleLastColumnButtonPressed(ActionEvent event) throws IOException {
    	columnService.setColumnIsActive(columnLength-1, !columnService.getColumnIsActive(columnLength-1));
    	columnsGridpane[columnsGridpane.length-1].setVisible(columnService.getColumnIsActive(columnLength-1));
    	if(columnService.getColumnIsActive(columnLength-1)) {
    		this.toggleLastColumnIsVisible.setText("Delete Column");
    	}else {
    		this.toggleLastColumnIsVisible.setText("Add Column");
    	}
    	
    } 
    @FXML protected void handleEditColumnNameButtonPressed(ActionEvent event) throws IOException { 
    	int columnIndex = (int) ((Button) event.getSource()).getUserData();
    	if(columnNameTextLabel[columnIndex].isVisible()) {        	
        	((Button) event.getSource()).setText("Save");
        	columnNameTextLabel[columnIndex].setVisible(!columnNameTextLabel[columnIndex].isVisible());
        	columnNameTextField[columnIndex].setVisible(!columnNameTextField[columnIndex].isVisible());    		
    	}else {
        	((Button) event.getSource()).setText("Edit");
        	columnNameTextLabel[columnIndex].setVisible(!columnNameTextLabel[columnIndex].isVisible());
        	columnNameTextField[columnIndex].setVisible(!columnNameTextField[columnIndex].isVisible());
        	columnService.setColumnName(columnIndex, columnNameTextField[columnIndex].getText());
        	columnNameTextLabel[columnIndex].setText(columnNameTextField[columnIndex].getText());
    	}
    }
    
}
